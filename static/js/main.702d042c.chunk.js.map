{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputvalue","setInputvalue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAsCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAkBvC,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACkCC,UAAUH,GAD5C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QARxB,kBAWZM,GAXY,4CAAH,sDCiBTO,EAfK,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAExB,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCwBDO,EA5BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECEJ,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACNxB,EAASC,GACJwB,MAAM,SAAAC,GACHC,YAAW,WACRJ,EAAS,CACLf,KAAKkB,EACLL,SAAS,MAEb,UAGZ,CAAEpB,IAEEqB,EDlB0BM,CAAc3B,GAAlCa,EAHe,EAGpBN,KAAaa,EAHO,EAGPA,QAIrB,OACI,qCACI,oBAAIJ,UAAU,sCAAd,SAAsDhB,IAEpDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAACmB,GAAD,OACR,cAAC,EAAD,eAESA,GADGA,EAAMjB,aEe3BkB,EA/BM,WAAO,IAAD,EAEa3C,mBAAS,CAAE,gBAFxB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KAWvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEI6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCpBhC+B,IAASC,OACN,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.702d042c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst AddCategory = ({ setcategories }) => {\n\n    const [inputvalue, setInputvalue] = useState('');\n\n    const handleInputChange = (e)=>{\n        setInputvalue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(inputvalue.trim().length > 2 ){\n            setcategories( cats => [ inputvalue,...cats ]);\n            setInputvalue('');\n        }\n        \n    }\n\n    return (\n        <form onSubmit = { handleSubmit }>            \n            <input \n                type=\"text\"\n                value={ inputvalue }\n                onChange = { handleInputChange }\n            />\n        </form>\n\n    )\n}\n\nAddCategory.propTypes = { \n    setcategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","\n    export const getGifs = async ( category )=>{\n        const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=rEt4L3uxG8ozsY4Tm8aWWIxvcpAvoTgv`;\n        const respuesta = await fetch(url);\n        const {data} = await respuesta.json();\n        const gifs = data.map(img =>{\n            return {\n                id : img.id,\n                title : img.title,\n                url : img.images?.downsized_medium.url\n            }\n        });\n        return gifs;\n    }","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GifGridItem = ({title,url}) => {\n    // console.log(title,url);\n    return (\n        <div className=\"card animate__animated animate__fadeInUp\">            \n            <img src={url} alt={title}/>   \n            <p>{title}</p>        \n        </div>\n    )\n}\n\nGifGridItem.propTypes = {\n    title : PropTypes.string.isRequired,\n    url : PropTypes.string.isRequired\n}\n\nexport default GifGridItem\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({category}) => {\n\n\n    const { data:images ,loading } = useFetchGifs( category );\n\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeInUp\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n            <div className=\"card-grid\">\n                {\n                    images.map( (image)=> (\n                        <GifGridItem \n                            key = { image.id }\n                            { ...image }\n                        />\n                    ))             \n                }    \n                \n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\n\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs( category )\n            .then( imgs => {\n                setTimeout(() => {\n                   setState({\n                       data:imgs,\n                       loading: false,\n                   })\n                }, 2000);\n                \n            })\n    }, [ category ])\n\n    return state;\n\n}\n","import React, { useState } from 'react';\nimport AddCategory from './AddCategory';\nimport GifGrid from './GifGrid';\n\n\nconst GifExpertApp = () => {\n\n    const [categories, setcategories] = useState([ 'Dragon Ball' ]);\n\n    // const handleAdd =() => {\n    //     // setcategories(\n    //     //     [...categories,'Black clover']\n    //     // )\n    //     setcategories(cats=>[...cats,'Black clover'])\n    // }\n\n    return (\n        <>  \n            <h2>GifExpertApp</h2>\n            <AddCategory setcategories = { setcategories }/>\n            <hr/>\n            <ol>\n            {\n                categories.map( category => (\n                    <GifGrid \n                        key = { category }\n                        category = { category }\n                    />\n                ))\n            }\n            </ol>\n\n        </>\n    )\n}\n\nexport default GifExpertApp;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\nimport './css/index.css';\n\nReactDOM.render(  \n   <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}